{"link": "http://hdl.handle.net/10138/154808", "subject": "Tietojenk\u00e4sittelytiede", "wordcount": 18108, "major": "Tietojenk\u00e4sittelytiede", "abstract": "Suuri osa nykyisist\u00e4 sovelluksista on selaimella k\u00e4ytett\u00e4vi\u00e4 web-sovelluksia. Er\u00e4s web-sovellusten suurimmista haasteista on tapahtumien k\u00e4sittely, joka sis\u00e4lt\u00e4\u00e4 suuren osan sovelluksen virheist\u00e4.\\n\\nFunktionaalinen reaktiivinen ohjelmointi pyrkii selkeytt\u00e4m\u00e4\u00e4n tapahtumienk\u00e4sittely\u00e4 ja sovelluksen tilan automaattista p\u00e4ivityst\u00e4. Funktionaalinen reaktiivinen ohjelmointi tarjoaa t\u00e4h\u00e4n kaksi ty\u00f6kalua: signaalit ja tapahtumavirrat. Signaalit ovat automaattisesti p\u00e4ivittyvi\u00e4 arvoja, joiden avulla sovelluksen k\u00e4ytt\u00f6liittym\u00e4 voidaan pit\u00e4\u00e4 automaattisesti p\u00e4ivitettyn\u00e4. Tapahtumavirrat ovat ajan mukaan j\u00e4rjestettyj\u00e4 kokoelmia tapahtumia. Tapahtuman tapahtuessa se lis\u00e4t\u00e4\u00e4n tapahtumavirtaan ja k\u00e4sitell\u00e4\u00e4n. Tapahtumavirroille voidaan tehd\u00e4 funktionaalisen ohjelmoinnin kokoelmien k\u00e4sittelyn tyylisi\u00e4 operaatioita.\\n\\nTutkielmassa esitell\u00e4\u00e4n funktionaalisen reaktiivisen ohjelmoinnin periaatteet ja k\u00e4sitell\u00e4\u00e4n tarkemmin Javascriptill\u00e4 tehdyist\u00e4 funktionaalisen reaktiivisen ohjelmoinnin toteutuksista RxJS ja Bacon.js.\\n\\nFunktionaalinen reaktiivinen ohjelmointi on selv\u00e4 edistysaskel yksinkertaisista pelkkiin takaisinkutsuihin perustuvista ratkaisuista. Se parantaa sovellusten yll\u00e4pidett\u00e4vyytt\u00e4, laajennettavuutta ja selkeytt\u00e4\u00e4 ohjelmakoodia.\\n\\nUseimpien sovellusten kehitt\u00e4misess\u00e4 k\u00e4ytet\u00e4\u00e4n sovelluskehyksi\u00e4. Sovelluskehysten tavoitteet ovat usein yhtenev\u00e4isi\u00e4 funktionaalisen reaktiivisen ohjelmoinnin kanssa, eli ne pyrkiv\u00e4t selkeytt\u00e4m\u00e4\u00e4n tapahtumien k\u00e4sittely\u00e4, yhten\u00e4ist\u00e4m\u00e4\u00e4n rajapintoja ja selkeytt\u00e4m\u00e4\u00e4n sovellusten rakennetta. Tutkielmassa esimerkkisovelluskehyksen\u00e4 on AngularJS. AngularJS toteuttaa monia reaktiivisuuden piirteit\u00e4 ja sit\u00e4 voidaan k\u00e4ytt\u00e4\u00e4 yhdess\u00e4 Bacon.js:n ja RxJS:n kanssa.\\n\\nFunktionaalista reaktiivista ohjelmointia voidaan k\u00e4ytt\u00e4\u00e4 yhdess\u00e4 sovelluskehysten kanssa, mutta sovelluskehysten kanssa funktionaalisen reaktiivisen ohjelmoinnin hy\u00f6ty j\u00e4\u00e4 pienemm\u00e4ksi. Monimutkaisen tapahtuman k\u00e4sittelyn yhteydess\u00e4 funktionaalisen reaktiivisen ohjelmoinnin k\u00e4ytt\u00f6 voi olla j\u00e4rkev\u00e4\u00e4, vaikka sovelluksessa olisikin sovelluskehys k\u00e4yt\u00f6ss\u00e4.", "faculty": "matlu", "charcount": 154713, "commonwords": [["voidaan", 157], ["ovat", 129], ["tapahtumavirran", 121], ["rivill\u00e4", 115], ["esimerkiksi", 103], ["tapahtumavirtojen", 101], ["tapahtumavirta", 95], ["avulla", 67], ["angularjsn", 57], ["baconjs", 54], ["angularjs", 54], ["tapahtumien", 53], ["sis\u00e4lt\u00e4\u00e4", 50], ["palauttaa", 48], ["luodaan", 48], ["arvo", 48], ["alkiot", 48], ["rxjs", 47], ["riveill\u00e4", 46], ["funktionaalisen", 46]], "keywords": "funktionaalinen reaktiivinen ohjelmointi, reaktiivinen ohjelmointi, javascript, rxjs, bacon.js", "unit": "Matemaattis-luonnontieteellinen tiedekunta, Tietojenk\u00e4sittelytieteen laitos", "status": "master", "thesistype": "Pro gradu -ty\u00f6", "pagecount": 82, "title": "Funktionaalinen reaktiivinen ohjelmointi web-sovelluksissa", "language": "fi", "author": "Lantto, Anttijuhani", "date": "2015-05-25", "distinctwords": 5541}